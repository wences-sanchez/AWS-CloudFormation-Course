Parameters:
  NameOfService:
    Description: Name your instance
    Type: String
  KeyName:
    Description: Choose your KeyPair
    Type: AWS::EC2::KeyPair::KeyName

Mappings:
  RegionMap:
    us-east-1:
      AmiUbuntu2204: ami-06878d265978313ca
      AmiAmazonLinux2: ami-0b5eea76982371e91

Resources:
  MyEC2Instance:
    Type: AWS::EC2::Instance
#    Metadata:
#      AWS::CloudFormation::Init:
#        config:
#          packages:
#            apt:
#              httpd: []
#          files:
#            /var/www/wences/:
#              owner: "root"
#              group: "root"
#              mode: "755"
#            /var/www/wences/index.html:
#              content: |
#                <html>
#                  <head>
#                    <title> Ubuntu rocks! </title>
#                  </head>
#                  <body>
#                    <p> I'm running this website on an Ubuntu Server server!
#                  </body>
#                </html>
#          services:
#            apache2:
#              enabled: true
#              ensureRunning: true
#          commands:
#            command: "a2ensite your_domain.conf"
#            command: "sudo a2dissite 000-default.conf"
    Properties:
      InstanceType: t3.micro
      ImageId: !FindInMap [ RegionMap, !Ref AWS::Region, AmiAmazonLinux2 ]
      KeyName: !Ref KeyName
      SecurityGroups:
        - !Ref WebServerSecurityGroup
      UserData:
        Fn::Base64: !Sub |
            #!/bin/bash -xe
            touch ~/existo.tmp
#            yum update -y httpd aws-cfn-bootstrap
#            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource EC2Instance --region ${AWS::Region}
      Tags:
        - Key: Name
          Value: !Ref NameOfService

  WebServerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security Group created for a Web Server
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          IpProtocol: tcp
          FromPort: 80
          ToPort: 80
        - CidrIp: 0.0.0.0/0
          IpProtocol: tcp
          FromPort: 22
          ToPort: 22
Outputs:
  ServerDns:
    Value: !GetAtt MyEC2Instance.PublicDnsName
